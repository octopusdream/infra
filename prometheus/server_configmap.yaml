Name:         prometheus-server
Namespace:    default
Labels:       app=prometheus
              app.kubernetes.io/managed-by=Helm
              chart=prometheus-16.0.0
              component=server
              heritage=Helm
              release=prometheus
Annotations:  meta.helm.sh/release-name: prometheus
              meta.helm.sh/release-namespace: default

Data
====
alerting_rules.yml:
----
groups:
- name: AllInstances
  rules:
  - alert: InstanceScaleOut
    annotations:
      description: Cluster has  been scale out 1 node for more than 10 seconds.
      summary: Instance {{ $labels.instance }} scale out
    expr: (sum(kube_node_info) > sum(kube_node_info offset 1m))
    for: 10s
    labels:
      severity: "info"
  - alert: ImbalancedZoneA
    annotations:
      description:  The number of nodes in zoneA is less than 20% of the number of nodes in all availability zones.
      summary: ZoneA nodes imbalancing
    expr: sum(up{topology_kubernetes_io_zone=~'ap-northeast-3a',job="kubernetes-nodes"})  <= sum(up{job="kubernetes-nodes"}) * 0.2
    for: 1m
    labels:
      severity: "info"
  - alert: ImbalancedZoneB
    annotations:
      description: The number of nodes in zoneB is less than 20% of the number of nodes in all availability zones.
      summary: ZoneB nodes imbalancing
    expr: sum(up{topology_kubernetes_io_zone=~'ap-northeast-3b',job="kubernetes-nodes"})  <= sum(up{job="kubernetes-nodes"}) * 0.2
    for: 1m
    labels:
      severity: "info"
  - alert: ImbalancedZoneC
    annotations:
      description: The number of nodes in zoneC is less than 20% of the number of nodes in all availability zones.
      summary: ZoneC nodes imbalancing
    expr: sum(up{topology_kubernetes_io_zone=~'ap-northeast-3c',job="kubernetes-nodes"})  <= sum(up{job="kubernetes-nodes"}) * 0.2
    for: 1m
    labels:
      severity: "info"
  - alert: MasterDown
    annotations:
      description: Master node {{ $labels.instance }} has been down more than 1 minute. You have to fix master node for quorom.
      summary: Master {{ $labels.instance }} down
    expr: up{key="master"} and up{job="kubernetes-nodes"} == 0
    for: 1m
    labels:
      severity: "page"
  - alert: MoreThanHalfOfWorkers
    annotations:
      description: Instance Scaled Out
      summary: AutoScaler capacity exceeds 50%
    expr: sum(up{job="kubernetes-nodes", key!="master"})  > (12 * 0.5)
    for: 1m
    labels:
      severity: "info"
  - alert: MaxInstanceScaleOut
    annotations:
      description: You should increase the maximum scale out value or check the part where the problems occurred.
      summary: AutoScaler capacity reached 100%
    expr: sum(up{job="kubernetes-nodes", key!="master"})  == 12
    for: 30s
    labels:
      severity: "page"
  - alert: PodCrashLoopBackOff
    annotations:
      description: 'Pod {{ $labels.pod }} is crash looping VALUE = {{ $value }} LABELS = {{ $labels }}'
      summary: Kubernetes pod crash looping (instance {{ $labels.instance }})
    expr: increase(kube_pod_container_status_restarts_total[1m]) > 3
    for: 2m
    labels:
      severity: "info"
  - alert: ZoneCrashed
    annotations:
      description: 'Crashed Zone: {{ $labels.topology_kubernetes_io_zone }}'
      summary: ZoneFailed
    expr: sum by (topology_kubernetes_io_zone)(up{topology_kubernetes_io_zone=~"ap-northeast-3a"}) == 0 or sum by (topology_kubernetes_io_zone)(up{topology_kubernetes_io_zone=~"ap-northeast-3b"}) == 0 or sum by (topology_kubernetes_io_zone)(up{topology_kubernetes_io_zone=~"ap-northeast-3c"}) == 0
    for: 0s
    labels:
      severity: "page"
  - alert: ScaleOutLimitation
    annotations:
      description: 'AWSAutoScaleGroup reached limit node count and unable to scale out any pod in all node.'
      summary: AutoScaler reached limitation
    expr: sum (kube_pod_status_phase{phase="Pending", namespace="default", pod=~"flask.*"}) > 0 and sum(up{job="kubernetes-nodes", key!="master"}) == 12
    for: 30s
    labels:
      severity: "critical"
  - alert: IncreasedHttpRequest
    annotations:
      description:  Http requests more than 3 times in 10 minutes
      summary: 3X Http requests
    expr: sum_over_time(flask_http_request_total{status="200", job!="my-flask-app"}[10m]) * 3 < sum_over_time(flask_http_request_total{status="200", job!="my-flask-app"}[10m] offset 10m)
    for: 1m
    labels:
      severity: "info"
  - alert: UnusualHttpRequest
    annotations:
      description:  HTTP requests increased more than 10 times in 10 minutes
      summary: 10X Http requests
    expr: sum_over_time(flask_http_request_total{status="200", job!="my-flask-app"}[10m]) * 3 < sum_over_time(flask_http_request_total{status="200", job!="my-flask-app"}[10m] offset 10m)
    for: 1m
    labels:
      severity: "page"

alerts:
----
{}

allow-snippet-annotations:
----
false
prometheus.yml:
----
global:
  evaluation_interval: 1m
  scrape_interval: 1m
  scrape_timeout: 10s
rule_files:
- /etc/config/recording_rules.yml
- /etc/config/alerting_rules.yml
- /etc/config/rules
- /etc/config/alerts
scrape_configs:
- job_name: prometheus
  static_configs:
  - targets:
    - localhost:9090
- job_name: my-flask-app
  scrape_interval: 5s
  static_configs:
  - targets:
    - 10.102.195.30:80
- job_name: flask-app
  kubernetes_sd_configs:
  - role: endpoints
  relabel_configs:
  - source_labels:
    - __meta_kubernetes_service_port_name
    target_label: name
    regex: http-metrics
  - source_labels:
    - __meta_kubernetes_endpoints_label_labelname
    target_label: labelname
    regex: flaskdemo

- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  job_name: kubernetes-apiservers
  kubernetes_sd_configs:
  - role: endpoints
  relabel_configs:
  - action: keep
    regex: default;kubernetes;https
    source_labels:
    - __meta_kubernetes_namespace
    - __meta_kubernetes_service_name
    - __meta_kubernetes_endpoint_port_name

  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  job_name: kubernetes-nodes
  kubernetes_sd_configs:
  - role: node
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - replacement: kubernetes.default.svc:443
    target_label: __address__
  - regex: (.+)
    replacement: /api/v1/nodes/$1/proxy/metrics
    source_labels:
    - __meta_kubernetes_node_name
    target_label: __metrics_path__
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
- bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  job_name: kubernetes-nodes-cadvisor
  kubernetes_sd_configs:
  - role: node
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - replacement: kubernetes.default.svc:443
    target_label: __address__
  - regex: (.+)
    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
    source_labels:
    - __meta_kubernetes_node_name
    target_label: __metrics_path__
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecure_skip_verify: true
- honor_labels: true
  job_name: kubernetes-service-endpoints
  kubernetes_sd_configs:
  - role: endpoints
  relabel_configs:
  - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_scrape
  - action: drop
    regex: true
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
  - action: replace
    regex: (https?)
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_scheme
    target_label: __scheme__
  - action: replace
    regex: (.+)
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_path
    target_label: __metrics_path__
  - action: replace
    regex: (.+?)(?::\d+)?;(\d+)
    replacement: $1:$2
    source_labels:
    - __address__
    - __meta_kubernetes_service_annotation_prometheus_io_port
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
    replacement: __param_$1
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - action: replace
    source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - action: replace
    source_labels:
    - __meta_kubernetes_service_name
    target_label: service
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_node_name
    target_label: node
- honor_labels: true
  job_name: kubernetes-service-endpoints-slow
  kubernetes_sd_configs:
  - role: endpoints
  relabel_configs:
  - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
  - action: replace
    regex: (https?)
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_scheme
    target_label: __scheme__
  - action: replace
    regex: (.+)
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_path
    target_label: __metrics_path__
  - action: replace
    regex: (.+?)(?::\d+)?;(\d+)
    replacement: $1:$2
    source_labels:
    - __address__
    - __meta_kubernetes_service_annotation_prometheus_io_port
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
    replacement: __param_$1
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - action: replace
    source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - action: replace
    source_labels:
    - __meta_kubernetes_service_name
    target_label: service
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_node_name
    target_label: node
  scrape_interval: 5m
  scrape_timeout: 30s
- honor_labels: true
  job_name: prometheus-pushgateway
  kubernetes_sd_configs:
  - role: service
  relabel_configs:
  - action: keep
    regex: pushgateway
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_probe
- honor_labels: true
  job_name: kubernetes-services
  kubernetes_sd_configs:
  - role: service
  metrics_path: /probe
  params:
    module:
    - http_2xx
  relabel_configs:
  - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_service_annotation_prometheus_io_probe
  - source_labels:
    - __address__
    target_label: __param_target
  - replacement: blackbox
    target_label: __address__
  - source_labels:
    - __param_target
    target_label: instance
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - source_labels:
    - __meta_kubernetes_service_name
    target_label: service
- honor_labels: true
  job_name: kubernetes-pods
  kubernetes_sd_configs:
  - role: pod
  relabel_configs:
  - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_scrape
  - action: drop
    regex: true
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
  - action: replace
    regex: (https?)
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
    target_label: __scheme__
  - action: replace
    regex: (.+)
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_path
    target_label: __metrics_path__
  - action: replace
    regex: (.+?)(?::\d+)?;(\d+)
    replacement: $1:$2
    source_labels:
    - __address__
    - __meta_kubernetes_pod_annotation_prometheus_io_port
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
    replacement: __param_$1
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - action: replace
    source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_name
    target_label: pod
  - action: drop
    regex: Pending|Succeeded|Failed|Completed
    source_labels:
    - __meta_kubernetes_pod_phase
- honor_labels: true
  job_name: kubernetes-pods-slow
  kubernetes_sd_configs:
  - role: pod
  relabel_configs:
  - action: keep
    regex: true
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
  - action: replace
    regex: (https?)
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_scheme
    target_label: __scheme__
  - action: replace
    regex: (.+)
    source_labels:
    - __meta_kubernetes_pod_annotation_prometheus_io_path
    target_label: __metrics_path__
  - action: replace
    regex: (.+?)(?::\d+)?;(\d+)
    replacement: $1:$2
    source_labels:
    - __address__
    - __meta_kubernetes_pod_annotation_prometheus_io_port
    target_label: __address__
  - action: labelmap
    regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
    replacement: __param_$1
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - action: replace
    source_labels:
    - __meta_kubernetes_namespace
    target_label: namespace
  - action: replace
    source_labels:
    - __meta_kubernetes_pod_name
    target_label: pod
  - action: drop
    regex: Pending|Succeeded|Failed|Completed
    source_labels:
    - __meta_kubernetes_pod_phase
  scrape_interval: 5m
  scrape_timeout: 30s
alerting:
  alertmanagers:
  - kubernetes_sd_configs:
      - role: pod
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace]
      regex: default
      action: keep
    - source_labels: [__meta_kubernetes_pod_label_app]
      regex: prometheus
      action: keep
    - source_labels: [__meta_kubernetes_pod_label_component]
      regex: alertmanager
      action: keep
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
      regex: .*
      action: keep
    - source_labels: [__meta_kubernetes_pod_container_port_number]
      regex: "9093"
      action: keep

recording_rules.yml:
----
{}

rules:
----
{}

Events:  <none>
